---
# We need sudo for some of the Docker commands.
sudo: required

env:
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"


# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull container from Docker Hub.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-role-jackett:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'
  # the base docker doesn't include curl or timezone data, so adding it... not worth creating my own docker
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm apt-get update
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm apt-get install -yf curl tzdata
  # Check the role/playbook's syntax.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/ansible-role-jackett/tests/test.yml --syntax-check
  # Run the role/playbook with ansible-playbook.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/ansible-role-jackett/tests/test.yml
  # Run the role/playbook again, checking to make sure it's idempotent.
  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook /etc/ansible/roles/ansible-role-jackett/tests/test.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=1.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Ensure responding on port 9117.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm /usr/bin/curl http://localhost:9117


notifications:
  # Notify Ansible Galaxy when a role builds successfully.